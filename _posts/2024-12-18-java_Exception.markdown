---
layout:       post
title:        "Java中的异常处理"
author:       "Fangyi"
header-style: text
catalog:      true
tags:
    - Web
    - JavaScript
---
# Java中的异常处理
#### 介绍
1.异常是什么?
答：程序中可能出现的问题

2.异常体系的最上层父类是谁?异常分为几类?
答：父类：Exception。

3.异常分为两类：编译时异常、运行时异常。编译时异常和运行时异常的区别?
编译时异常：没有继承RuntimeExcpetion的异常，直接继承于Excpetion。编译阶段就会错误提示。
运行时异常：RuntimeException本身和子类。编译阶段没有错误提示，运行时出现的。

4.运行时异常和编译时异常的区别?
编译时异常：除了RuntimeExcpetion和他的子类，其他都是编译时异常。编译阶段需要进行处理，作用在于提醒程序员。
运行时异常：RuntimeException本身和所有子类，都是运行时异常。编译阶段不报错，是程序运行时出现的。一般是由于参数传递错误带来的问题。

5.异常的作用
作用一：异常是用来查询bug的关键参考信息。
作用二：异常可以作为方法内部的一种特殊返回值，以便通知调用者底层的执行情况。

6.异常的处理方式
①JVM默认的处理方式：把异常的名称，异常原因及异常出现的位置等信息输出在了控制台，程序停止执行，下面的代码不会再执行了。
②自己处理：try-catch
③抛出异常：throw/throws.throw：写在方法定义处，表示声明一个异常告诉调用者，使用本方法可能会有哪些异常。throw：写在方法内，结束方法手动抛出异常对象，交给调用者方法中下面的代码不再执行了。

7.自定义异常
编译时异常就继承Expection，运行时异常就继承RuntimeException。

